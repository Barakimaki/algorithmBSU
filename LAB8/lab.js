const findMinWay = mat => {
    let N = mat.length
    let M = mat[0].length

    for (i = 0; i < N; i++) {
        for (j = 0; j < M; j++) {
            if ((i - j) < 0 || (i - j) > (N - M)) {
                mat[i][j] = Infinity
            }
        }
    }
    let res = 0;
    for (i = 1; i < N; i++) {
        mat[i][0] += Math.min(mat[i - 1][0], mat[i - 1][1]);
        for (j = 1; j < M - 1; j++) {
            mat[i][j] += Math.min(mat[i - 1][j - 1], Math.min(mat[i - 1][j], mat[i - 1][j + 1]));
        }
        mat[i][M - 1] += Math.min(mat[i - 1][M - 2], mat[i - 1][M - 1]);
    }
    console.log(mat)

    return mat[N - 1][M - 1]
}


let matrix = [
    [2, 4, 5, 6],
    [8, 2, 3, 6],
    [2, 6, 3, 4],
    [5, 7, 8, 1],
    [4, 3, 2, 1]
]
let matrix2 = [
    [1, 4, 5, 6],
    [0, 1, 3, 6],
    [2, 1, 0, 4],
    [5, 7, 1, 0],
    [4, 3, 2, 1]
]

let matrix3 = [
    [9, 2, 5, 4, 5, 2, 2, 10, 9, 9],
    [5, 8, 1, 8, 3, 9, 9, 3, 1, 5],
    [1, 4, 6, 5, 8, 4, 8, 8, 7, 9],
    [4, 6, 2, 1, 1, 6, 5, 4, 2, 9],
    [5, 9, 7, 10, 8, 5, 8, 1, 3, 4],
    [6, 4, 7, 6, 4, 10, 7, 3, 3, 7],
    [1, 5, 6, 9, 3, 3, 9, 4, 8, 3],
    [4, 4, 8, 10, 8, 2, 3, 10, 9, 6],
    [9, 3, 1, 7, 1, 1, 6, 8, 2, 1],
    [3, 5, 1, 7, 4, 6, 9, 4, 2, 9],
    [7, 2, 6, 5, 6, 9, 6, 2, 5, 9],
    [3, 4, 8, 3, 9, 6, 6, 3, 7, 2],
    [10, 10, 6, 8, 3, 5, 2, 5, 8, 10],
    [2, 4, 10, 8, 7, 6, 6, 6, 10, 6],
    [2, 7, 7, 8, 10, 3, 9, 6, 5, 6],
    [9, 3, 4, 10, 4, 7, 1, 5, 5, 4],
    [1, 6, 2, 2, 2, 4, 9, 9, 2, 8],
    [8, 3, 4, 6, 9, 6, 6, 8, 7, 10],
    [5, 8, 9, 10, 5, 5, 3, 4, 4, 3],
    [9, 2, 2, 2, 2, 8, 10, 5, 4, 6]
]

console.log(findMinWay(matrix))
console.log(findMinWay(matrix2))
console.log(findMinWay(matrix3))
